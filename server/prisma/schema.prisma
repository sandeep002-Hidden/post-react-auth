datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id             String    @id @default(cuid())
  ProfilePicture String?
  FirstName      String
  LastName       String
  Email          String    @unique
  UserName       String    @unique
  Password       String
  Refreshoken    String?
  FollowedBy     User[]    @relation("UserFollows")
  Following      User[]    @relation("UserFollows")
  Projects       Project[] @relation("UserProjects")
  Otp            Int?
  OtpExpire      DateTime?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
}

model Project {
  id          String        @id @default(cuid())
  CreatorId   String
  Creator     User          @relation("UserProjects", fields: [CreatorId], references: [id])
  Name        String
  Description String
  RootFolder  Folder?       @relation("ProjectRootFolder")
  Folders     Folder[]      @relation("ProjectFolders")
  Files       ProjectFile[]
  Thumbnail   String?
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt

  @@index([CreatorId])
}

model Folder {
  id            String        @id @default(cuid())
  name          String
  projectId     String
  project       Project       @relation("ProjectFolders", fields: [projectId], references: [id], onDelete: Cascade)
  parentId      String?
  parent        Folder?       @relation("FolderHierarchy", fields: [parentId], references: [id], onDelete: Cascade)
  subFolders    Folder[]      @relation("FolderHierarchy")
  files         ProjectFile[]
  isRoot        Boolean       @default(false)
  rootProject   Project?      @relation("ProjectRootFolder", fields: [rootProjectId], references: [id])
  rootProjectId String?       @unique
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt

  @@index([projectId])
  @@index([parentId])
}

model ProjectFile {
  id        String   @id @default(cuid())
  name      String
  path      String
  size      Int
  type      String
  projectId String
  project   Project  @relation(fields: [projectId], references: [id], onDelete: Cascade)
  folderId  String?
  folder    Folder?  @relation(fields: [folderId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([projectId])
  @@index([folderId])
}
